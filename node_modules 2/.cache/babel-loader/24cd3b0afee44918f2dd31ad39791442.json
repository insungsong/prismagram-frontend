{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/UserCard.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"./Avatar\";\nimport FatText from \"../Components/FatText\";\nimport Button from \"./Button\";\nconst Card = styled.div``;\n\nconst UserCard = ({\n  username,\n  isFollowing,\n  url,\n  isSelf\n}) => /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  url: url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(FatText, {\n  text: username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}), !isSelf && /*#__PURE__*/React.createElement(Button, {\n  text: isFollowing ? \"Unfollow\" : \"Follow\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }\n}));\n\nUserCard.propTypes = {\n  username: PropTypes.string.isRequired,\n  isFollowing: PropTypes.bool.isRequired,\n  url: PropTypes.string.isRequired,\n  isSelf: PropTypes.bool.isRequired\n};\nexport default UserCard;","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/UserCard.js"],"names":["React","styled","PropTypes","Avatar","FatText","Button","Card","div","UserCard","username","isFollowing","url","isSelf","propTypes","string","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,IAAI,GAAGL,MAAM,CAACM,GAAI,EAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,GAAzB;AAA8BC,EAAAA;AAA9B,CAAD,kBACf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAQ,EAAA,GAAG,EAAED,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,OAAD;AAAS,EAAA,IAAI,EAAEF,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGG,CAACG,MAAD,iBAAW,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAEF,WAAW,GAAG,UAAH,GAAgB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHd,CADF;;AAQAF,QAAQ,CAACK,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UADR;AAEnBL,EAAAA,WAAW,EAAER,SAAS,CAACc,IAAV,CAAeD,UAFT;AAGnBJ,EAAAA,GAAG,EAAET,SAAS,CAACY,MAAV,CAAiBC,UAHH;AAInBH,EAAAA,MAAM,EAAEV,SAAS,CAACc,IAAV,CAAeD;AAJJ,CAArB;AAOA,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"./Avatar\";\nimport FatText from \"../Components/FatText\";\nimport Button from \"./Button\";\n\nconst Card = styled.div``;\n\nconst UserCard = ({ username, isFollowing, url, isSelf }) => (\n  <Card>\n    <Avatar url={url} />\n    <FatText text={username} />\n    {!isSelf && <Button text={isFollowing ? \"Unfollow\" : \"Follow\"} />}\n  </Card>\n);\n\nUserCard.propTypes = {\n  username: PropTypes.string.isRequired,\n  isFollowing: PropTypes.bool.isRequired,\n  url: PropTypes.string.isRequired,\n  isSelf: PropTypes.bool.isRequired\n};\n\nexport default UserCard;\n"]},"metadata":{},"sourceType":"module"}