{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Routes/OneOfPost/OneOfPostContainer.js\";\nimport React from \"react\";\nimport OneOfPostPresenter from \"./OneOfPostPresenter\";\nimport { withRouter } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../../Components/Loader\";\nconst GET_SEE_FEED = gql`\n  {\n    seeFeed {\n      id\n      location\n      caption\n      user {\n        id\n        avatar\n        username\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          username\n        }\n      }\n      createdAt\n    }\n  }\n`;\nexport default withRouter(({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(GET_SEE_FEED);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }\n    });\n  } else {\n    const feedsInfo = data.seeFeed.map(feed => feed.id);\n\n    if (1 === feedsInfo.indexOf(id)) {\n      return /*#__PURE__*/React.createElement(OneOfPostPresenter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Routes/OneOfPost/OneOfPostContainer.js"],"names":["React","OneOfPostPresenter","withRouter","gql","useQuery","Loader","GET_SEE_FEED","match","params","id","data","loading","feedsInfo","seeFeed","map","feed","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAzB;AA8BA,eAAeD,UAAU,CACvB,CAAC;AACCK,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADR,CAAD,KAIM;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,QAAQ,CAACE,YAAD,CAAlC;;AACA,MAAIK,OAAJ,EAAa;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,UAAMC,SAAS,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAUA,IAAI,CAACN,EAAhC,CAAlB;;AAEA,QAAI,MAAMG,SAAS,CAACI,OAAV,CAAkBP,EAAlB,CAAV,EAAiC;AAC/B,0BAAO,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;AACF,CAhBsB,CAAzB","sourcesContent":["import React from \"react\";\nimport OneOfPostPresenter from \"./OneOfPostPresenter\";\nimport { withRouter } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../../Components/Loader\";\n\nconst GET_SEE_FEED = gql`\n  {\n    seeFeed {\n      id\n      location\n      caption\n      user {\n        id\n        avatar\n        username\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          username\n        }\n      }\n      createdAt\n    }\n  }\n`;\n\nexport default withRouter(\n  ({\n    match: {\n      params: { id }\n    }\n  }) => {\n    const { data, loading } = useQuery(GET_SEE_FEED);\n    if (loading) {\n      return <Loader />;\n    } else {\n      const feedsInfo = data.seeFeed.map((feed) => feed.id);\n\n      if (1 === feedsInfo.indexOf(id)) {\n        return <OneOfPostPresenter />;\n      }\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}