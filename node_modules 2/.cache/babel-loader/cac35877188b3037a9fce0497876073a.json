{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Routes/OneOfPost/OneOfPostPresenter.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Avatar from \"../../Components/Avatar\";\nimport { Link } from \"react-router-dom\";\nimport FatText from \"../../Components/FatText\";\nimport TextareaAutosize from \"react-autosize-textarea/lib\";\nconst Header = styled.header`\n  display: flex;\n  height: 80vh;\n`;\nconst Wrapper = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  user-select: none;\n  margin-bottom: 25px;\n  a {\n    color: inherit;\n  }\n`;\nconst WrapperRow = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  margin-bottom: 25px;\n  a {\n    color: inherit;\n  }\n`;\nconst UserColumn = styled.span`\n  margin-left: 10px;\n`;\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\nconst FileBox = styled.div`\n  display: flex;\n  width: 100%;\n  overflow: hidden;\n`;\nconst File = styled.img`\n  position: relative;\n  max-width: 100%;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.src});\n  background-size: cover;\n  background-position: center;\n`;\nconst Comments = styled.ul`\n  margin-top: 10px;\n`;\nconst Comment = styled.li`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n  display: block;\n`;\nconst UserBox = styled.div`\n  display: flex;\n`;\nconst Textarea = styled(TextareaAutosize)`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst onkeyPress = event => {\n  console.log(event);\n};\n\nexport default (({\n  id,\n  username,\n  avatar,\n  location,\n  isLiked,\n  files,\n  url,\n  likeCount,\n  comments\n}) => {\n  console.log(comments);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, files.map(file => {\n    return /*#__PURE__*/React.createElement(File, {\n      id: file.id,\n      key: file.id,\n      src: file.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(WrapperRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: \"md\",\n    url: avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UserColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FatText, {\n    text: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, location))), /*#__PURE__*/React.createElement(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, comments.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FatText, {\n      text: comment.user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }), comment.text);\n  })), /*#__PURE__*/React.createElement(Textarea, {\n    onKeyPress: onkeyPress,\n    placeholder: \"댓글을 입력하세요...\",\n    value: comment,\n    onChange: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Routes/OneOfPost/OneOfPostPresenter.js"],"names":["React","useState","styled","Avatar","Link","FatText","TextareaAutosize","Header","header","Wrapper","div","props","theme","whiteBox","WrapperRow","UserColumn","span","Location","FileBox","File","img","src","Comments","ul","Comment","li","UserBox","Textarea","onkeyPress","event","console","log","id","username","avatar","location","isLiked","files","url","likeCount","comments","map","file","comment","user","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Avatar from \"../../Components/Avatar\";\nimport { Link } from \"react-router-dom\";\nimport FatText from \"../../Components/FatText\";\nimport TextareaAutosize from \"react-autosize-textarea/lib\";\n\nconst Header = styled.header`\n  display: flex;\n  height: 80vh;\n`;\n\nconst Wrapper = styled.div`\n  ${(props) => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  user-select: none;\n  margin-bottom: 25px;\n  a {\n    color: inherit;\n  }\n`;\n\nconst WrapperRow = styled.div`\n  ${(props) => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  margin-bottom: 25px;\n  a {\n    color: inherit;\n  }\n`;\n\nconst UserColumn = styled.span`\n  margin-left: 10px;\n`;\n\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\n\nconst FileBox = styled.div`\n  display: flex;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst File = styled.img`\n  position: relative;\n  max-width: 100%;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Comments = styled.ul`\n  margin-top: 10px;\n`;\n\nconst Comment = styled.li`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n  display: block;\n`;\n\nconst UserBox = styled.div`\n  display: flex;\n`;\n\nconst Textarea = styled(TextareaAutosize)`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst onkeyPress = (event) => {\n  console.log(event);\n};\n\nexport default ({\n  id,\n  username,\n  avatar,\n  location,\n  isLiked,\n  files,\n  url,\n  likeCount,\n  comments\n}) => {\n  console.log(comments);\n  return (\n    <>\n      <Header>\n        <Wrapper>\n          <FileBox>\n            {files.map((file) => {\n              return <File id={file.id} key={file.id} src={file.url} />;\n            })}\n          </FileBox>\n        </Wrapper>\n        <WrapperRow>\n          <UserBox>\n            <Avatar size=\"md\" url={avatar} />\n            <UserColumn>\n              <Link to={`/${username}`}>\n                <FatText text={username} />\n              </Link>\n              <Location>{location}</Location>\n            </UserColumn>\n          </UserBox>\n          <Comments>\n            {comments.map((comment) => {\n              return (\n                <Comment key={comment.id}>\n                  <FatText text={comment.user.username} />\n                  {comment.text}\n                </Comment>\n              );\n            })}\n          </Comments>\n          <Textarea\n            onKeyPress={onkeyPress}\n            placeholder={\"댓글을 입력하세요...\"}\n            value={comment}\n            onChange={comment}\n          />\n        </WrapperRow>\n      </Header>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}