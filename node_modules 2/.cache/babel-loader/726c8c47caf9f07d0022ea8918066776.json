{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../../Hooks/useInput\";\nimport PostPresenter from \"./PostPresenter\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { TOGGLE_LIKE, ADD_COMMENT } from \"./PostQuerise\";\nexport const PostContainer = ({\n  id,\n  user,\n  files,\n  likeCount,\n  isLiked,\n  comments,\n  createdAt,\n  caption,\n  location\n}) => {\n  const [isLikedS, setIsLiked] = useState(isLiked);\n  const [likeCountS, setLikeCount] = useState(likeCount);\n  const [currentItem, setCurrentItem] = useState(0);\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\n    variables: {\n      postId: id\n    }\n  });\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\n    variables: {\n      postId: id\n    }\n  });\n  const comment = useInput(\"\");\n\n  const slide = () => {\n    const totalFiles = files.length;\n\n    if (currentItem === totalFiles - 1) {\n      setTimeout(() => setCurrentItem(0), 3000);\n    } else {\n      setTimeout(() => setCurrentItem(currentItem + 1), 3000);\n    }\n  };\n\n  useEffect(() => {\n    //componentDidMount에서 작동한다.\n    slide();\n  }, [currentItem]); //그리고 currentItem이 변할때마다 실행되는 것이다 뭐가 다시 slide()가\n\n  return /*#__PURE__*/React.createElement(PostPresenter, {\n    user: user,\n    location: location,\n    caption: caption,\n    files: files,\n    likeCount: likeCountS,\n    isLiked: isLikedS,\n    comments: comments,\n    createdAt: createdAt,\n    newComment: comment,\n    setIsLiked: setIsLiked,\n    setLikeCount: setLikeCount,\n    currentItem: currentItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\nPostContainer.propTypes = {\n  id: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.string.isRequired\n  }).isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  })).isRequired,\n  likeCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired\n    }).isRequired,\n    createdAt: PropTypes.string\n  })).isRequired,\n  caption: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  createdAt: PropTypes.string.isRequired\n};\nexport default PostContainer;","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostContainer.js"],"names":["React","useState","useEffect","PropTypes","useInput","PostPresenter","useMutation","TOGGLE_LIKE","ADD_COMMENT","PostContainer","id","user","files","likeCount","isLiked","comments","createdAt","caption","location","isLikedS","setIsLiked","likeCountS","setLikeCount","currentItem","setCurrentItem","toggleLikeMutation","variables","postId","addCommentMutation","comment","slide","totalFiles","length","setTimeout","propTypes","string","isRequired","shape","avatar","username","arrayOf","url","number","bool","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,EAD4B;AAE5BC,EAAAA,IAF4B;AAG5BC,EAAAA,KAH4B;AAI5BC,EAAAA,SAJ4B;AAK5BC,EAAAA,OAL4B;AAM5BC,EAAAA,QAN4B;AAO5BC,EAAAA,SAP4B;AAQ5BC,EAAAA,OAR4B;AAS5BC,EAAAA;AAT4B,CAAD,KAUvB;AACJ,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBnB,QAAQ,CAACa,OAAD,CAAvC;AACA,QAAM,CAACO,UAAD,EAAaC,YAAb,IAA6BrB,QAAQ,CAACY,SAAD,CAA3C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACwB,kBAAD,IAAuBnB,WAAW,CAACC,WAAD,EAAc;AACpDmB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEjB;AAAV;AADyC,GAAd,CAAxC;AAGA,QAAM,CAACkB,kBAAD,IAAuBtB,WAAW,CAACE,WAAD,EAAc;AACpDkB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEjB;AAAV;AADyC,GAAd,CAAxC;AAGA,QAAMmB,OAAO,GAAGzB,QAAQ,CAAC,EAAD,CAAxB;;AACA,QAAM0B,KAAK,GAAG,MAAM;AAClB,UAAMC,UAAU,GAAGnB,KAAK,CAACoB,MAAzB;;AACA,QAAIT,WAAW,KAAKQ,UAAU,GAAG,CAAjC,EAAoC;AAClCE,MAAAA,UAAU,CAAC,MAAMT,cAAc,CAAC,CAAD,CAArB,EAA0B,IAA1B,CAAV;AACD,KAFD,MAEO;AACLS,MAAAA,UAAU,CAAC,MAAMT,cAAc,CAACD,WAAW,GAAG,CAAf,CAArB,EAAwC,IAAxC,CAAV;AACD;AACF,GAPD;;AAQArB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA4B,IAAAA,KAAK;AACN,GAHQ,EAGN,CAACP,WAAD,CAHM,CAAT,CAnBI,CAsBe;;AAEnB,sBACE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,QAAQ,EAAEO,QAFZ;AAGE,IAAA,OAAO,EAAED,OAHX;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,SAAS,EAAES,UALb;AAME,IAAA,OAAO,EAAEF,QANX;AAOE,IAAA,QAAQ,EAAEJ,QAPZ;AAQE,IAAA,SAAS,EAAEC,SARb;AASE,IAAA,UAAU,EAAEa,OATd;AAUE,IAAA,UAAU,EAAET,UAVd;AAWE,IAAA,YAAY,EAAEE,YAXhB;AAYE,IAAA,WAAW,EAAEC,WAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD,CAlDM;AAoDPd,aAAa,CAACyB,SAAd,GAA0B;AACxBxB,EAAAA,EAAE,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UADG;AAExBzB,EAAAA,IAAI,EAAER,SAAS,CAACkC,KAAV,CAAgB;AACpB3B,IAAAA,EAAE,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UADD;AAEpBE,IAAAA,MAAM,EAAEnC,SAAS,CAACgC,MAFE;AAGpBI,IAAAA,QAAQ,EAAEpC,SAAS,CAACgC,MAAV,CAAiBC;AAHP,GAAhB,EAIHA,UANqB;AAOxBxB,EAAAA,KAAK,EAAET,SAAS,CAACqC,OAAV,CACLrC,SAAS,CAACkC,KAAV,CAAgB;AACd3B,IAAAA,EAAE,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UADP;AAEdK,IAAAA,GAAG,EAAEtC,SAAS,CAACgC,MAAV,CAAiBC;AAFR,GAAhB,CADK,EAKLA,UAZsB;AAaxBvB,EAAAA,SAAS,EAAEV,SAAS,CAACuC,MAAV,CAAiBN,UAbJ;AAcxBtB,EAAAA,OAAO,EAAEX,SAAS,CAACwC,IAAV,CAAeP,UAdA;AAexBrB,EAAAA,QAAQ,EAAEZ,SAAS,CAACqC,OAAV,CACRrC,SAAS,CAACkC,KAAV,CAAgB;AACd3B,IAAAA,EAAE,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UADP;AAEdQ,IAAAA,IAAI,EAAEzC,SAAS,CAACgC,MAAV,CAAiBC,UAFT;AAGdzB,IAAAA,IAAI,EAAER,SAAS,CAACkC,KAAV,CAAgB;AACpB3B,MAAAA,EAAE,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UADD;AAEpBG,MAAAA,QAAQ,EAAEpC,SAAS,CAACgC,MAAV,CAAiBC;AAFP,KAAhB,EAGHA,UANW;AAOdpB,IAAAA,SAAS,EAAEb,SAAS,CAACgC;AAPP,GAAhB,CADQ,EAURC,UAzBsB;AA0BxBnB,EAAAA,OAAO,EAAEd,SAAS,CAACgC,MAAV,CAAiBC,UA1BF;AA2BxBlB,EAAAA,QAAQ,EAAEf,SAAS,CAACgC,MA3BI;AA4BxBnB,EAAAA,SAAS,EAAEb,SAAS,CAACgC,MAAV,CAAiBC;AA5BJ,CAA1B;AA+BA,eAAe3B,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../../Hooks/useInput\";\nimport PostPresenter from \"./PostPresenter\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { TOGGLE_LIKE, ADD_COMMENT } from \"./PostQuerise\";\n\nexport const PostContainer = ({\n  id,\n  user,\n  files,\n  likeCount,\n  isLiked,\n  comments,\n  createdAt,\n  caption,\n  location\n}) => {\n  const [isLikedS, setIsLiked] = useState(isLiked);\n  const [likeCountS, setLikeCount] = useState(likeCount);\n  const [currentItem, setCurrentItem] = useState(0);\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\n    variables: { postId: id }\n  });\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\n    variables: { postId: id }\n  });\n  const comment = useInput(\"\");\n  const slide = () => {\n    const totalFiles = files.length;\n    if (currentItem === totalFiles - 1) {\n      setTimeout(() => setCurrentItem(0), 3000);\n    } else {\n      setTimeout(() => setCurrentItem(currentItem + 1), 3000);\n    }\n  };\n  useEffect(() => {\n    //componentDidMount에서 작동한다.\n    slide();\n  }, [currentItem]); //그리고 currentItem이 변할때마다 실행되는 것이다 뭐가 다시 slide()가\n\n  return (\n    <PostPresenter\n      user={user}\n      location={location}\n      caption={caption}\n      files={files}\n      likeCount={likeCountS}\n      isLiked={isLikedS}\n      comments={comments}\n      createdAt={createdAt}\n      newComment={comment}\n      setIsLiked={setIsLiked}\n      setLikeCount={setLikeCount}\n      currentItem={currentItem}\n    />\n  );\n};\n\nPostContainer.propTypes = {\n  id: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.string.isRequired\n  }).isRequired,\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  likeCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired\n      }).isRequired,\n      createdAt: PropTypes.string\n    })\n  ).isRequired,\n  caption: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  createdAt: PropTypes.string.isRequired\n};\n\nexport default PostContainer;\n"]},"metadata":{},"sourceType":"module"}