{"ast":null,"code":"import { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { getNamedType } from \"../type/definition.mjs\";\nimport { TypeInfo, visitWithTypeInfo } from \"./TypeInfo.mjs\";\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\n\nexport function findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new TypeInfo(schema);\n  visit(ast, visitWithTypeInfo(typeInfo, {\n    Field: function Field(node) {\n      var parentType = typeInfo.getParentType();\n      var fieldDef = typeInfo.getFieldDef();\n\n      if (parentType && (fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason) != null) {\n        errors.push(new GraphQLError(\"The field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" is deprecated. \") + fieldDef.deprecationReason, node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var type = getNamedType(typeInfo.getInputType());\n      var enumVal = typeInfo.getEnumValue();\n\n      if (type && (enumVal === null || enumVal === void 0 ? void 0 : enumVal.deprecationReason) != null) {\n        errors.push(new GraphQLError(\"The enum value \\\"\".concat(type.name, \".\").concat(enumVal.name, \"\\\" is deprecated. \") + enumVal.deprecationReason, node));\n      }\n    }\n  }));\n  return errors;\n}","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/node_modules/graphql/utilities/findDeprecatedUsages.mjs"],"names":["GraphQLError","visit","getNamedType","TypeInfo","visitWithTypeInfo","findDeprecatedUsages","schema","ast","errors","typeInfo","Field","node","parentType","getParentType","fieldDef","getFieldDef","deprecationReason","push","concat","name","EnumValue","type","getInputType","enumVal","getEnumValue"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,gBAA5C;AACA;;;;;;AAMA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,GAAtC,EAA2C;AAChD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAG,IAAIN,QAAJ,CAAaG,MAAb,CAAf;AACAL,EAAAA,KAAK,CAACM,GAAD,EAAMH,iBAAiB,CAACK,QAAD,EAAW;AACrCC,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAC1B,UAAIC,UAAU,GAAGH,QAAQ,CAACI,aAAT,EAAjB;AACA,UAAIC,QAAQ,GAAGL,QAAQ,CAACM,WAAT,EAAf;;AAEA,UAAIH,UAAU,IAAI,CAACE,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACE,iBAA9D,KAAoF,IAAtG,EAA4G;AAC1GR,QAAAA,MAAM,CAACS,IAAP,CAAY,IAAIjB,YAAJ,CAAiB,eAAekB,MAAf,CAAsBN,UAAU,CAACO,IAAjC,EAAuC,GAAvC,EAA4CD,MAA5C,CAAmDJ,QAAQ,CAACK,IAA5D,EAAkE,oBAAlE,IAA0FL,QAAQ,CAACE,iBAApH,EAAuIL,IAAvI,CAAZ;AACD;AACF,KARoC;AASrCS,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBT,IAAnB,EAAyB;AAClC,UAAIU,IAAI,GAAGnB,YAAY,CAACO,QAAQ,CAACa,YAAT,EAAD,CAAvB;AACA,UAAIC,OAAO,GAAGd,QAAQ,CAACe,YAAT,EAAd;;AAEA,UAAIH,IAAI,IAAI,CAACE,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACP,iBAA3D,KAAiF,IAA7F,EAAmG;AACjGR,QAAAA,MAAM,CAACS,IAAP,CAAY,IAAIjB,YAAJ,CAAiB,oBAAoBkB,MAApB,CAA2BG,IAAI,CAACF,IAAhC,EAAsC,GAAtC,EAA2CD,MAA3C,CAAkDK,OAAO,CAACJ,IAA1D,EAAgE,oBAAhE,IAAwFI,OAAO,CAACP,iBAAjH,EAAoIL,IAApI,CAAZ;AACD;AACF;AAhBoC,GAAX,CAAvB,CAAL;AAkBA,SAAOH,MAAP;AACD","sourcesContent":["import { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { getNamedType } from \"../type/definition.mjs\";\nimport { TypeInfo, visitWithTypeInfo } from \"./TypeInfo.mjs\";\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\n\nexport function findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new TypeInfo(schema);\n  visit(ast, visitWithTypeInfo(typeInfo, {\n    Field: function Field(node) {\n      var parentType = typeInfo.getParentType();\n      var fieldDef = typeInfo.getFieldDef();\n\n      if (parentType && (fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason) != null) {\n        errors.push(new GraphQLError(\"The field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" is deprecated. \") + fieldDef.deprecationReason, node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var type = getNamedType(typeInfo.getInputType());\n      var enumVal = typeInfo.getEnumValue();\n\n      if (type && (enumVal === null || enumVal === void 0 ? void 0 : enumVal.deprecationReason) != null) {\n        errors.push(new GraphQLError(\"The enum value \\\"\".concat(type.name, \".\").concat(enumVal.name, \"\\\" is deprecated. \") + enumVal.deprecationReason, node));\n      }\n    }\n  }));\n  return errors;\n}\n"]},"metadata":{},"sourceType":"module"}