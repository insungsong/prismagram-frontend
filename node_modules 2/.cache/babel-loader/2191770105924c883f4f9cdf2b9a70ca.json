{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Routes/Profile.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { withRouter } from \"react-router-dom\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../Components/Loader\";\nimport Avatar from \"../Components/Avatar\";\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  min-height: 60px;\n`;\nconst Header = styled.header``;\nconst HeaderColumn = styled.div``;\nexport default withRouter(({\n  match: {\n    params: {\n      username\n    }\n  }\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(GET_USER, {\n    variables: {\n      username\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    console.log(data);\n    console.log(data.seeUser);\n    const {\n      seeUser: avatar,\n      username,\n      fullName,\n      isFollowing,\n      isSelf,\n      bio,\n      followingCount,\n      followersCount,\n      postsCount,\n      posts\n    } = data;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HeaderColumn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      size: \"lg\",\n      url: avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }))));\n  }\n});","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Routes/Profile.js"],"names":["React","styled","gql","withRouter","useQuery","Loader","Avatar","GET_USER","Wrapper","div","Header","header","HeaderColumn","match","params","username","data","loading","variables","console","log","seeUser","avatar","fullName","isFollowing","isSelf","bio","followingCount","followersCount","postsCount","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,QAAQ,GAAGL,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAArB;AAyBA,MAAMM,OAAO,GAAGP,MAAM,CAACQ,GAAI;;CAA3B;AAIA,MAAMC,MAAM,GAAGT,MAAM,CAACU,MAAO,EAA7B;AAEA,MAAMC,YAAY,GAAGX,MAAM,CAACQ,GAAI,EAAhC;AAEA,eAAeN,UAAU,CACvB,CAAC;AACCU,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADR,CAAD,KAIM;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBb,QAAQ,CAACG,QAAD,EAAW;AAAEW,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AAAb,GAAX,CAAlC;;AACA,MAAIE,OAAJ,EAAa;AACX,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND,MAMO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,OAAjB;AACA,UAAM;AACJA,MAAAA,OAAO,EAAEC,MADL;AAEJP,MAAAA,QAFI;AAGJQ,MAAAA,QAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJC,MAAAA,cAPI;AAQJC,MAAAA,cARI;AASJC,MAAAA,UATI;AAUJC,MAAAA;AAVI,QAWFd,IAXJ;AAYA,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,GAAG,EAAEM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AASD;AACF,CAtCsB,CAAzB","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { withRouter } from \"react-router-dom\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../Components/Loader\";\nimport Avatar from \"../Components/Avatar\";\n\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  min-height: 60px;\n`;\n\nconst Header = styled.header``;\n\nconst HeaderColumn = styled.div``;\n\nexport default withRouter(\n  ({\n    match: {\n      params: { username }\n    }\n  }) => {\n    const { data, loading } = useQuery(GET_USER, { variables: { username } });\n    if (loading) {\n      return (\n        <Wrapper>\n          <Loader />\n        </Wrapper>\n      );\n    } else {\n      console.log(data);\n      console.log(data.seeUser);\n      const {\n        seeUser: avatar,\n        username,\n        fullName,\n        isFollowing,\n        isSelf,\n        bio,\n        followingCount,\n        followersCount,\n        postsCount,\n        posts\n      } = data;\n      return (\n        <>\n          <Header>\n            <HeaderColumn>\n              <Avatar size=\"lg\" url={avatar} />\n            </HeaderColumn>\n          </Header>\n        </>\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}