{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/FollowButton/FollowButtonContainer.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FOLLOW, UNFOLLOW } from \"./FollowButtonQueries\";\nimport FollowButtonPresenter from \"./FollowButtonPresenter\";\n\nconst FollowButtonContainer = ({\n  isFollowing,\n  id\n}) => {\n  const [isFollowingS, setIsFollowingS] = useState(isFollowing);\n  const [followMutation] = useMutation(FOLLOW, {\n    variables: {\n      id\n    }\n  });\n  const [unfollowMutation] = useMutation(UNFOLLOW, {\n    variables: id\n  });\n\n  const onClick = () => {\n    if (isFollowingS === true) {\n      setIsFollowingS(false);\n    } else {\n      setIsFollowingS(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FollowButtonPresenter, {\n    onClick: onClick,\n    isFollowing: isFollowing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  });\n};\n\nFollowButtonContainer.propTypes = {\n  isFollowing: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default FollowButtonContainer;","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/FollowButton/FollowButtonContainer.js"],"names":["React","useState","PropTypes","useMutation","FOLLOW","UNFOLLOW","FollowButtonPresenter","FollowButtonContainer","isFollowing","id","isFollowingS","setIsFollowingS","followMutation","variables","unfollowMutation","onClick","propTypes","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,uBAAjC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAyB;AACrD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAACO,WAAD,CAAhD;AACA,QAAM,CAACI,cAAD,IAAmBT,WAAW,CAACC,MAAD,EAAS;AAAES,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAAb,GAAT,CAApC;AACA,QAAM,CAACK,gBAAD,IAAqBX,WAAW,CAACE,QAAD,EAAW;AAAEQ,IAAAA,SAAS,EAAEJ;AAAb,GAAX,CAAtC;;AAEA,QAAMM,OAAO,GAAG,MAAM;AACpB,QAAIL,YAAY,KAAK,IAArB,EAA2B;AACzBC,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAND;;AAOA,sBAAO,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEI,OAAhC;AAAyC,IAAA,WAAW,EAAEP,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAbD;;AAeAD,qBAAqB,CAACS,SAAtB,GAAkC;AAChCR,EAAAA,WAAW,EAAEN,SAAS,CAACe,IAAV,CAAeC,UADI;AAEhCT,EAAAA,EAAE,EAAEP,SAAS,CAACiB,MAAV,CAAiBD;AAFW,CAAlC;AAKA,eAAeX,qBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FOLLOW, UNFOLLOW } from \"./FollowButtonQueries\";\nimport FollowButtonPresenter from \"./FollowButtonPresenter\";\n\nconst FollowButtonContainer = ({ isFollowing, id }) => {\n  const [isFollowingS, setIsFollowingS] = useState(isFollowing);\n  const [followMutation] = useMutation(FOLLOW, { variables: { id } });\n  const [unfollowMutation] = useMutation(UNFOLLOW, { variables: id });\n\n  const onClick = () => {\n    if (isFollowingS === true) {\n      setIsFollowingS(false);\n    } else {\n      setIsFollowingS(true);\n    }\n  };\n  return <FollowButtonPresenter onClick={onClick} isFollowing={isFollowing} />;\n};\n\nFollowButtonContainer.propTypes = {\n  isFollowing: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default FollowButtonContainer;\n"]},"metadata":{},"sourceType":"module"}