{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/Avatar.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst getSize = size => {\n  let number;\n\n  if (size === \"sm\") {\n    number = 30;\n  } else if (size === \"md\") {\n    number = 50;\n  } else if (size === \"lg\") {\n    number = 150;\n  }\n\n  return `width:${number}px;\n          height:${number}px;\n        `;\n};\n\nconst Container = styled.div`\n  ${props => getSize(props.size)}\n  background-image: url(${props => props.url});\n  background-size: cover;\n  border-radius: 50%;\n`;\n\nconst Avatar = ({\n  size = \"sm\",\n  url,\n  className\n}) => {\n  return /*#__PURE__*/React.createElement(Container, {\n    size: size,\n    url: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  });\n};\n\nAvatar.propTypes = {\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\n  url: PropTypes.string.isRequired\n};\nexport default Avatar;","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/Avatar.js"],"names":["React","styled","PropTypes","getSize","size","number","Container","div","props","url","Avatar","className","propTypes","oneOf","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,MAAIC,MAAJ;;AACA,MAAID,IAAI,KAAK,IAAb,EAAmB;AACjBC,IAAAA,MAAM,GAAG,EAAT;AACD,GAFD,MAEO,IAAID,IAAI,KAAK,IAAb,EAAmB;AACxBC,IAAAA,MAAM,GAAG,EAAT;AACD,GAFM,MAEA,IAAID,IAAI,KAAK,IAAb,EAAmB;AACxBC,IAAAA,MAAM,GAAG,GAAT;AACD;;AACD,SAAQ,SAAQA,MAAO;mBACNA,MAAO;SADxB;AAGD,CAZD;;AAcA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;IACxBC,KAAD,IAAWL,OAAO,CAACK,KAAK,CAACJ,IAAP,CAAa;0BACRI,KAAD,IAAWA,KAAK,CAACC,GAAI;;;CAF/C;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAAEN,EAAAA,IAAI,GAAG,IAAT;AAAeK,EAAAA,GAAf;AAAoBE,EAAAA;AAApB,CAAD,KAAqC;AAClD,sBAAO,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEP,IAAjB;AAAuB,IAAA,GAAG,EAAEK,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAIAC,MAAM,CAACE,SAAP,GAAmB;AACjBR,EAAAA,IAAI,EAAEF,SAAS,CAACW,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB,CADW;AAEjBJ,EAAAA,GAAG,EAAEP,SAAS,CAACY,MAAV,CAAiBC;AAFL,CAAnB;AAKA,eAAeL,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst getSize = (size) => {\n  let number;\n  if (size === \"sm\") {\n    number = 30;\n  } else if (size === \"md\") {\n    number = 50;\n  } else if (size === \"lg\") {\n    number = 150;\n  }\n  return `width:${number}px;\n          height:${number}px;\n        `;\n};\n\nconst Container = styled.div`\n  ${(props) => getSize(props.size)}\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  border-radius: 50%;\n`;\n\nconst Avatar = ({ size = \"sm\", url, className }) => {\n  return <Container size={size} url={url} />;\n};\n\nAvatar.propTypes = {\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\n  url: PropTypes.string.isRequired\n};\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}