{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport { HeartFull, HeartEmpty, Comment } from \"../Icons\";\nconst Post = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n`;\nconst Header = styled.header`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\nconst Files = styled.div``;\nconst File = styled.img`\n  max-width: 100%;\n`;\nconst Button = styled.span`\n  cursor: pointer;\n`;\nconst Meta = styled.div`\n  padding: 15px;\n`;\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\nconst TimeStamp = styled.span`\n  font-weight: 300;\n  text-transform: uppercase;\n  color: ${props => props.theme.lightGreyColor};\n`;\nexport default (({\n  user: {\n    username,\n    avatar\n  },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt\n}) => /*#__PURE__*/React.createElement(Post, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  size: \"sm\",\n  url: avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UserColumn, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FatText, {\n  text: username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Location, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }\n}, location))), /*#__PURE__*/React.createElement(Files, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n}, files && files.map(file => /*#__PURE__*/React.createElement(File, {\n  id: file.id,\n  src: file.url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 37\n  }\n}))), /*#__PURE__*/React.createElement(Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Buttons, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }\n}, isLiked ? /*#__PURE__*/React.createElement(HeartFull, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 28\n  }\n}) : /*#__PURE__*/React.createElement(HeartEmpty, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 44\n  }\n})), /*#__PURE__*/React.createElement(Button, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Comment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(FatText, {\n  text: likeCount === 1 ? \"1 like\" : `${likeCount} likes`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TimeStamp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }\n}, createdAt))));","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js"],"names":["React","styled","FatText","Avatar","HeartFull","HeartEmpty","Comment","Post","div","props","theme","whiteBox","Header","header","UserColumn","Location","span","Files","File","img","Button","Meta","Buttons","TimeStamp","lightGreyColor","user","username","avatar","location","files","isLiked","likeCount","createdAt","map","file","id","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport { HeartFull, HeartEmpty, Comment } from \"../Icons\";\n\nconst Post = styled.div`\n  ${(props) => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Header = styled.header`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\n\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\n\nconst Files = styled.div``;\n\nconst File = styled.img`\n  max-width: 100%;\n`;\n\nconst Button = styled.span`\n  cursor: pointer;\n`;\n\nconst Meta = styled.div`\n  padding: 15px;\n`;\n\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\n\nconst TimeStamp = styled.span`\n  font-weight: 300;\n  text-transform: uppercase;\n  color: ${(props) => props.theme.lightGreyColor};\n`;\n\nexport default ({\n  user: { username, avatar },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt\n}) => (\n  <Post>\n    <Header>\n      <Avatar size=\"sm\" url={avatar} />\n      <UserColumn>\n        <FatText text={username} />\n        <Location>{location}</Location>\n      </UserColumn>\n    </Header>\n    <Files>\n      {files && files.map((file) => <File id={file.id} src={file.url} />)}\n    </Files>\n    <Meta>\n      <Buttons>\n        <Button>{isLiked ? <HeartFull /> : <HeartEmpty />}</Button>\n        <Button>\n          <Comment />\n        </Button>\n      </Buttons>\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\n      <TimeStamp>{createdAt}</TimeStamp>\n    </Meta>\n  </Post>\n);\n"]},"metadata":{},"sourceType":"module"}