{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport { HeartFull, HeartEmpty, Comment as CommentIcon, DeleteButton } from \"../Icons\";\nconst Post = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  user-select: none;\n  margin-bottom: 25px;\n`;\nconst Header = styled.header`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\nconst Files = styled.div`\n  position: relative;\n  padding-top: 100%;\n`;\nconst File = styled.img`\n  max-width: 100%;\n  width: 100%;\n  height: 600px;\n  position: absolute;\n  top: 0;\n  background-image: url(${props => props.src});\n  background-size: cover;\n  background-position: center;\n  opacity: ${props => props.showing ? 1 : 0};\n  transition: opacity 0.5s linear;\n`;\nconst Button = styled.span`\n  cursor: pointer;\n`;\nconst Meta = styled.div`\n  padding: 15px;\n`;\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\nconst TimeStamp = styled.span`\n  font-weight: 400;\n  text-transform: uppercase;\n  opacity: 0.5;\n  display: block;\n  font-size: 12px;\n  margin: 10px 0px;\n  padding-bottom: 10px;\n  border-bottom: ${props => props.theme.lightGreyColor} 1px solid;\n`;\nconst Textarea = styled(TextareaAutosize)`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\nconst Comments = styled.ul`\n  margin-top: 10px;\n`;\nconst Comment = styled.li`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n`;\nconst DeleteButtonTag = styled.span`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n`;\n\nconst DeleteIdButtonList = id => {\n  console.log(id);\n  return null;\n};\n\nexport default (({\n  user: {\n    username,\n    avatar\n  },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt,\n  newComment,\n  currentItem,\n  toggleLike,\n  onkeyPress,\n  comments,\n  selfComments\n}) => /*#__PURE__*/React.createElement(Post, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  size: \"sm\",\n  url: avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UserColumn, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FatText, {\n  text: username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Location, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }\n}, location))), /*#__PURE__*/React.createElement(Files, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }\n}, files && files.map((file, index) => /*#__PURE__*/React.createElement(File, {\n  id: file.id,\n  key: file.id,\n  src: file.url,\n  showing: index === currentItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Buttons, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  onClick: toggleLike,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }\n}, isLiked ? /*#__PURE__*/React.createElement(HeartFull, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 22\n  }\n}) : /*#__PURE__*/React.createElement(HeartEmpty, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 38\n  }\n})), /*#__PURE__*/React.createElement(Button, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(CommentIcon, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(FatText, {\n  text: likeCount === 1 ? \"1 like\" : `${likeCount} likes`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 7\n  }\n}), comments && /*#__PURE__*/React.createElement(Comments, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }\n}, comments.map(comment => /*#__PURE__*/React.createElement(Comment, {\n  key: comment.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(FatText, {\n  text: comment.user.username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 15\n  }\n}), comment.text, /*#__PURE__*/React.createElement(DeleteButton, {\n  id: comment.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 15\n  }\n}))), selfComments.map(comment => /*#__PURE__*/React.createElement(Comment, {\n  key: comment.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(FatText, {\n  text: comment.user.username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 15\n  }\n}), comment.text))), /*#__PURE__*/React.createElement(TimeStamp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 7\n  }\n}, createdAt), /*#__PURE__*/React.createElement(\"form\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Textarea, {\n  onKeyPress: onkeyPress,\n  placeholder: \"댓글을 입력하세요...\",\n  value: newComment.value,\n  onChange: newComment.onChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }\n})))));","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js"],"names":["React","styled","TextareaAutosize","FatText","Avatar","HeartFull","HeartEmpty","Comment","CommentIcon","DeleteButton","Post","div","props","theme","whiteBox","Header","header","UserColumn","Location","span","Files","File","img","src","showing","Button","Meta","Buttons","TimeStamp","lightGreyColor","Textarea","Comments","ul","li","DeleteButtonTag","DeleteIdButtonList","id","console","log","user","username","avatar","location","files","isLiked","likeCount","createdAt","newComment","currentItem","toggleLike","onkeyPress","comments","selfComments","map","file","index","url","comment","text","value","onChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport {\n  HeartFull,\n  HeartEmpty,\n  Comment as CommentIcon,\n  DeleteButton\n} from \"../Icons\";\n\nconst Post = styled.div`\n  ${(props) => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  user-select: none;\n  margin-bottom: 25px;\n`;\n\nconst Header = styled.header`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\n\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\n\nconst Files = styled.div`\n  position: relative;\n  padding-top: 100%;\n`;\n\nconst File = styled.img`\n  max-width: 100%;\n  width: 100%;\n  height: 600px;\n  position: absolute;\n  top: 0;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n  opacity: ${(props) => (props.showing ? 1 : 0)};\n  transition: opacity 0.5s linear;\n`;\n\nconst Button = styled.span`\n  cursor: pointer;\n`;\n\nconst Meta = styled.div`\n  padding: 15px;\n`;\n\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\n\nconst TimeStamp = styled.span`\n  font-weight: 400;\n  text-transform: uppercase;\n  opacity: 0.5;\n  display: block;\n  font-size: 12px;\n  margin: 10px 0px;\n  padding-bottom: 10px;\n  border-bottom: ${(props) => props.theme.lightGreyColor} 1px solid;\n`;\n\nconst Textarea = styled(TextareaAutosize)`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Comments = styled.ul`\n  margin-top: 10px;\n`;\n\nconst Comment = styled.li`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n`;\n\nconst DeleteButtonTag = styled.span`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n`;\n\nconst DeleteIdButtonList = (id) => {\n  console.log(id);\n  return null;\n};\n\nexport default ({\n  user: { username, avatar },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt,\n  newComment,\n  currentItem,\n  toggleLike,\n  onkeyPress,\n  comments,\n  selfComments\n}) => (\n  <Post>\n    <Header>\n      <Avatar size=\"sm\" url={avatar} />\n      <UserColumn>\n        <FatText text={username} />\n        <Location>{location}</Location>\n      </UserColumn>\n    </Header>\n    <Files>\n      {files &&\n        files.map((file, index) => (\n          <File\n            id={file.id}\n            key={file.id}\n            src={file.url}\n            showing={index === currentItem}\n          />\n        ))}\n    </Files>\n    <Meta>\n      <Buttons>\n        <Button onClick={toggleLike}>\n          {isLiked ? <HeartFull /> : <HeartEmpty />}\n        </Button>\n        <Button>\n          <CommentIcon />\n        </Button>\n      </Buttons>\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\n      {comments && (\n        <Comments>\n          {comments.map((comment) => (\n            <Comment key={comment.id}>\n              <FatText text={comment.user.username} />\n              {comment.text}\n              <DeleteButton id={comment.id} />\n            </Comment>\n          ))}\n          {selfComments.map((comment) => (\n            <Comment key={comment.id}>\n              <FatText text={comment.user.username} />\n              {comment.text}\n            </Comment>\n          ))}\n        </Comments>\n      )}\n      <TimeStamp>{createdAt}</TimeStamp>\n      <form>\n        <Textarea\n          onKeyPress={onkeyPress}\n          placeholder={\"댓글을 입력하세요...\"}\n          value={newComment.value}\n          onChange={newComment.onChange}\n        />\n      </form>\n    </Meta>\n  </Post>\n);\n"]},"metadata":{},"sourceType":"module"}