{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/UserCard.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"./Avatar\";\nimport FatText from \"../Components/FatText\";\nimport Button from \"./Button\";\nimport { Link } from \"react-router-dom\";\nconst Card = styled.div`\n  ${props => props.theme.whiteBox}\n  display:flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\nconst EAvatar = styled(Avatar)`\n  margin-bottom: 15px;\n`;\nconst ELink = style(Link)`\n  color:inherit;\n`;\n\nconst UserCard = ({\n  username,\n  isFollowing,\n  url,\n  isSelf\n}) => /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(EAvatar, {\n  url: url,\n  size: \"md\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Link, {\n  to: `/${username}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FatText, {\n  text: username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n})), !isSelf && /*#__PURE__*/React.createElement(Button, {\n  text: isFollowing ? \"Unfollow\" : \"Follow\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }\n}));\n\nUserCard.propTypes = {\n  username: PropTypes.string.isRequired,\n  isFollowing: PropTypes.bool.isRequired,\n  url: PropTypes.string.isRequired,\n  isSelf: PropTypes.bool.isRequired\n};\nexport default UserCard;","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/UserCard.js"],"names":["React","styled","PropTypes","Avatar","FatText","Button","Link","Card","div","props","theme","whiteBox","EAvatar","ELink","style","UserCard","username","isFollowing","url","isSelf","propTypes","string","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,IAAI,GAAGN,MAAM,CAACO,GAAI;IACnBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,QAAS;;;;;CADpC;AAQA,MAAMC,OAAO,GAAGX,MAAM,CAACE,MAAD,CAAS;;CAA/B;AAIA,MAAMU,KAAK,GAAGC,KAAK,CAACR,IAAD,CAAO;;CAA1B;;AAIA,MAAMS,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,GAAzB;AAA8BC,EAAAA;AAA9B,CAAD,kBACf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAED,GAAd;AAAmB,EAAA,IAAI,EAAE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAG,IAAGF,QAAS,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,OAAD;AAAS,EAAA,IAAI,EAAEA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,EAKG,CAACG,MAAD,iBAAW,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAEF,WAAW,GAAG,UAAH,GAAgB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALd,CADF;;AAUAF,QAAQ,CAACK,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAEd,SAAS,CAACmB,MAAV,CAAiBC,UADR;AAEnBL,EAAAA,WAAW,EAAEf,SAAS,CAACqB,IAAV,CAAeD,UAFT;AAGnBJ,EAAAA,GAAG,EAAEhB,SAAS,CAACmB,MAAV,CAAiBC,UAHH;AAInBH,EAAAA,MAAM,EAAEjB,SAAS,CAACqB,IAAV,CAAeD;AAJJ,CAArB;AAOA,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"./Avatar\";\nimport FatText from \"../Components/FatText\";\nimport Button from \"./Button\";\nimport { Link } from \"react-router-dom\";\n\nconst Card = styled.div`\n  ${(props) => props.theme.whiteBox}\n  display:flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst EAvatar = styled(Avatar)`\n  margin-bottom: 15px;\n`;\n\nconst ELink = style(Link)`\n  color:inherit;\n`;\n\nconst UserCard = ({ username, isFollowing, url, isSelf }) => (\n  <Card>\n    <EAvatar url={url} size={\"md\"} />\n    <Link to={`/${username}`}>\n      <FatText text={username} />\n    </Link>\n    {!isSelf && <Button text={isFollowing ? \"Unfollow\" : \"Follow\"} />}\n  </Card>\n);\n\nUserCard.propTypes = {\n  username: PropTypes.string.isRequired,\n  isFollowing: PropTypes.bool.isRequired,\n  url: PropTypes.string.isRequired,\n  isSelf: PropTypes.bool.isRequired\n};\n\nexport default UserCard;\n"]},"metadata":{},"sourceType":"module"}