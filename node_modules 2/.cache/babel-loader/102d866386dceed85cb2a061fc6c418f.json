{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Routes/Profile/ProfileContainer.js\";\nimport { gql } from \"apollo-boost\";\nimport ProfileContainer from \".\";\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\nexport default withRouter(({\n  match: {\n    params: {\n      username\n    }\n  }\n}) => {\n  const {\n    data,\n    loading\n  } = useQuery(GET_USER, {\n    variables: {\n      username\n    }\n  });\n  return /*#__PURE__*/React.createElement(ProfilePresenter, {\n    loading: loading,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  });\n});","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Routes/Profile/ProfileContainer.js"],"names":["gql","ProfileContainer","GET_USER","withRouter","match","params","username","data","loading","useQuery","variables"],"mappings":";AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,GAA7B;AAEA,MAAMC,QAAQ,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAArB;AAyBA,eAAeG,UAAU,CACvB,CAAC;AACCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADR,CAAD,KAIM;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBC,QAAQ,CAACP,QAAD,EAAW;AAAEQ,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAAb,GAAX,CAAlC;AACA,sBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEE,OAA3B;AAAoC,IAAA,IAAI,EAAED,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CARsB,CAAzB","sourcesContent":["import { gql } from \"apollo-boost\";\nimport ProfileContainer from \".\";\n\nconst GET_USER = gql`\n  query seeUser($username: String!) {\n    seeUser(username: $username) {\n      id\n      avatar\n      username\n      fullName\n      isFollowing\n      isSelf\n      bio\n      followingCount\n      followersCount\n      postsCount\n      posts {\n        id\n        files {\n          url\n        }\n        likeCount\n        commentCount\n      }\n    }\n  }\n`;\n\nexport default withRouter(\n  ({\n    match: {\n      params: { username }\n    }\n  }) => {\n    const { data, loading } = useQuery(GET_USER, { variables: { username } });\n    return <ProfilePresenter loading={loading} data={data} />;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}