{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport { HeartFull, HeartEmpty, Comment } from \"../Icons\";\nconst Post = styled.div`\n  ${props => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  user-select: none;\n  margin-bottom: 25px;\n`;\nconst Header = styled.header`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\nconst Files = styled.div`\n  position: relative;\n  padding-top: 100%;\n`;\nconst File = styled.img`\n  max-width: 100%;\n  width: 100%;\n  height: 600px;\n  position: absolute;\n  top: 0;\n  background-image: url(${props => props.src});\n  background-size: cover;\n  background-position: center;\n  opacity: ${props => props.showing ? 1 : 0};\n  transition: opacity 0.5s linear;\n`;\nconst Button = styled.span`\n  cursor: pointer;\n`;\nconst Meta = styled.div`\n  padding: 15px;\n`;\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\nconst TimeStamp = styled.span`\n  font-weight: 400;\n  text-transform: uppercase;\n  opacity: 0.5;\n  display: block;\n  font-size: 12px;\n  margin: 10px 0px;\n  padding-bottom: 10px;\n  border-bottom: ${props => props.theme.lightGreyColor} 1px solid;\n`;\nconst Textarea = styled(TextareaAutosize)`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\nexport default (({\n  user: {\n    username,\n    avatar\n  },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt,\n  newComment,\n  currentItem,\n  toggleLike,\n  onkeyPress\n}) => /*#__PURE__*/React.createElement(Post, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  size: \"sm\",\n  url: avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UserColumn, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FatText, {\n  text: username,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Location, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }\n}, location))), /*#__PURE__*/React.createElement(Files, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }\n}, files && files.map((file, index) => /*#__PURE__*/React.createElement(File, {\n  id: file.id,\n  key: file.id,\n  src: file.url,\n  showing: index === currentItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Buttons, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  onClick: toggleLike,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }\n}, isLiked ? /*#__PURE__*/React.createElement(HeartFull, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 22\n  }\n}) : /*#__PURE__*/React.createElement(HeartEmpty, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 38\n  }\n})), /*#__PURE__*/React.createElement(Button, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Comment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(FatText, {\n  text: likeCount === 1 ? \"1 like\" : `${likeCount} likes`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TimeStamp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }\n}, createdAt), /*#__PURE__*/React.createElement(\"form\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Textarea, {\n  placeholder: \"댓글을 입력하세요...\",\n  value: newComment.value,\n  onChange: newComment.onChange,\n  onKeyDown: onkeyPress,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }\n})))));","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Components/Post/PostPresenter.js"],"names":["React","styled","TextareaAutosize","FatText","Avatar","HeartFull","HeartEmpty","Comment","Post","div","props","theme","whiteBox","Header","header","UserColumn","Location","span","Files","File","img","src","showing","Button","Meta","Buttons","TimeStamp","lightGreyColor","Textarea","user","username","avatar","location","files","isLiked","likeCount","createdAt","newComment","currentItem","toggleLike","onkeyPress","map","file","index","id","url","value","onChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport FatText from \"../FatText\";\nimport Avatar from \"../Avatar\";\nimport { HeartFull, HeartEmpty, Comment } from \"../Icons\";\n\nconst Post = styled.div`\n  ${(props) => props.theme.whiteBox};\n  width: 100%;\n  max-width: 600px;\n  user-select: none;\n  margin-bottom: 25px;\n`;\n\nconst Header = styled.header`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst UserColumn = styled.div`\n  margin-left: 10px;\n`;\n\nconst Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\n\nconst Files = styled.div`\n  position: relative;\n  padding-top: 100%;\n`;\n\nconst File = styled.img`\n  max-width: 100%;\n  width: 100%;\n  height: 600px;\n  position: absolute;\n  top: 0;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n  opacity: ${(props) => (props.showing ? 1 : 0)};\n  transition: opacity 0.5s linear;\n`;\n\nconst Button = styled.span`\n  cursor: pointer;\n`;\n\nconst Meta = styled.div`\n  padding: 15px;\n`;\n\nconst Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\n\nconst TimeStamp = styled.span`\n  font-weight: 400;\n  text-transform: uppercase;\n  opacity: 0.5;\n  display: block;\n  font-size: 12px;\n  margin: 10px 0px;\n  padding-bottom: 10px;\n  border-bottom: ${(props) => props.theme.lightGreyColor} 1px solid;\n`;\n\nconst Textarea = styled(TextareaAutosize)`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport default ({\n  user: { username, avatar },\n  location,\n  files,\n  isLiked,\n  likeCount,\n  createdAt,\n  newComment,\n  currentItem,\n  toggleLike,\n  onkeyPress\n}) => (\n  <Post>\n    <Header>\n      <Avatar size=\"sm\" url={avatar} />\n      <UserColumn>\n        <FatText text={username} />\n        <Location>{location}</Location>\n      </UserColumn>\n    </Header>\n    <Files>\n      {files &&\n        files.map((file, index) => (\n          <File\n            id={file.id}\n            key={file.id}\n            src={file.url}\n            showing={index === currentItem}\n          />\n        ))}\n    </Files>\n    <Meta>\n      <Buttons>\n        <Button onClick={toggleLike}>\n          {isLiked ? <HeartFull /> : <HeartEmpty />}\n        </Button>\n        <Button>\n          <Comment />\n        </Button>\n      </Buttons>\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\n      <TimeStamp>{createdAt}</TimeStamp>\n      <form>\n        <Textarea\n          placeholder={\"댓글을 입력하세요...\"}\n          value={newComment.value}\n          onChange={newComment.onChange}\n          onKeyDown={onkeyPress}\n        />\n      </form>\n    </Meta>\n  </Post>\n);\n"]},"metadata":{},"sourceType":"module"}