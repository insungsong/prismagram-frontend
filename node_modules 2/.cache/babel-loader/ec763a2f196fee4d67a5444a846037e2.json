{"ast":null,"code":"var _jsxFileName = \"/Users/insungsong/Documents/prismagram-frontend/src/Routes/Feed.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../Components/Loader\";\nimport Post from \"../Components/Post\";\nconst FEED_QUERY = gql`\n  {\n    seeFeed {\n      id\n      location\n      caption\n      user {\n        id\n        avatar\n        username\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          username\n        }\n      }\n      createdAt\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 80vh;\n`;\nexport default (() => {\n  const {\n    data,\n    loading\n  } = useQuery(FEED_QUERY);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }), !loading && data && data.seeFeed && data.seeFeed.map(post => /*#__PURE__*/React.createElement(Post, {\n    key: post.id,\n    id: post.id,\n    location: post.location,\n    caption: post.caption,\n    user: post.user,\n    files: post.files,\n    likeCount: post.likeCount,\n    isLiked: post.isLiked,\n    comments: post.comments,\n    createdAt: post.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/insungsong/Documents/prismagram-frontend/src/Routes/Feed.js"],"names":["React","styled","gql","useQuery","Loader","Post","FEED_QUERY","Wrapper","div","data","loading","seeFeed","map","post","id","location","caption","user","files","likeCount","isLiked","comments","createdAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,UAAU,GAAGJ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;AA8BA,MAAMK,OAAO,GAAGN,MAAM,CAACO,GAAI;;;;;CAA3B;AAOA,gBAAe,MAAM;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,QAAQ,CAACG,UAAD,CAAlC;AAEA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEG,CAACA,OAAD,IACCD,IADD,IAECA,IAAI,CAACE,OAFN,IAGCF,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,IAAD,iBACf,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,EAAE,EAAED,IAAI,CAACC,EAFX;AAGE,IAAA,QAAQ,EAAED,IAAI,CAACE,QAHjB;AAIE,IAAA,OAAO,EAAEF,IAAI,CAACG,OAJhB;AAKE,IAAA,IAAI,EAAEH,IAAI,CAACI,IALb;AAME,IAAA,KAAK,EAAEJ,IAAI,CAACK,KANd;AAOE,IAAA,SAAS,EAAEL,IAAI,CAACM,SAPlB;AAQE,IAAA,OAAO,EAAEN,IAAI,CAACO,OARhB;AASE,IAAA,QAAQ,EAAEP,IAAI,CAACQ,QATjB;AAUE,IAAA,SAAS,EAAER,IAAI,CAACS,SAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALJ,CADF;AAsBD,CAzBD","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport Loader from \"../Components/Loader\";\nimport Post from \"../Components/Post\";\n\nconst FEED_QUERY = gql`\n  {\n    seeFeed {\n      id\n      location\n      caption\n      user {\n        id\n        avatar\n        username\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          username\n        }\n      }\n      createdAt\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 80vh;\n`;\n\nexport default () => {\n  const { data, loading } = useQuery(FEED_QUERY);\n\n  return (\n    <Wrapper>\n      {loading && <Loader />}\n      {!loading &&\n        data &&\n        data.seeFeed &&\n        data.seeFeed.map((post) => (\n          <Post\n            key={post.id}\n            id={post.id}\n            location={post.location}\n            caption={post.caption}\n            user={post.user}\n            files={post.files}\n            likeCount={post.likeCount}\n            isLiked={post.isLiked}\n            comments={post.comments}\n            createdAt={post.createdAt}\n          />\n        ))}\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}